{"version":3,"sources":["firebase.js","components/Header.js","features/appSlice.js","components/SidebarOption.js","components/Sidebar.js","components/ChatInput.js","components/Message.js","components/Chat.js","components/Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","Header","useAuthState","user","HeaderContainer","HeaderLeft","HeaderAvatar","src","photoURL","alt","displayName","onClick","signOut","HeaderSearch","type","placeholder","HeaderRight","styled","div","Avatar","appSlice","createSlice","name","initialState","roomId","reducers","enterRoom","state","action","payload","id","actions","selectRoomId","app","SidebarOption","Icon","title","addChannelOption","dispatch","useDispatch","addChannel","a","channelName","prompt","collection","add","then","docRef","SidebarOptionContainer","fontSize","style","padding","SidebarOptionChannel","h3","Sidebar","useCollection","channels","SidebarContainer","SidebarHeader","SidebarInfo","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","docs","map","doc","data","ChatInput","channelId","chatRef","useState","input","setInput","ChatInputContainer","value","onChange","e","target","Button","hidden","preventDefault","message","timestamp","FieldValue","serverTimestamp","userImage","current","scrollIntoView","behavior","Message","MessageContainer","MessageInfo","Date","toDate","toUTCString","Chat","useRef","useSelector","useDocument","roomDetails","orderBy","roomMessages","loading","useEffect","ChatContainer","ChatMessages","ChatBottom","ref","Login","LoginContainer","LoginInnerContainer","signInWithPopup","catch","error","alert","App","className","AppBody","path","store","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eb8d01f0.chunk.js","sourcesContent":["import firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyACVcO_mtht0hYcxsIpvJmnBE2OtonPEP0\",\n    authDomain: \"slack-clone-6ee77.firebaseapp.com\",\n    projectId: \"slack-clone-6ee77\",\n    storageBucket: \"slack-clone-6ee77.appspot.com\",\n    messagingSenderId: \"911257892018\",\n    appId: \"1:911257892018:web:c602a0d91b5fb96cb645ab\"\n  };\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, provider, db };","import React from 'react'\nimport styled from 'styled-components'\nimport { Avatar } from '@mui/material'\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport SearchIcon from '@mui/icons-material/Search';\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { auth } from '../firebase';\n\nfunction Header() {\n    const [user] = useAuthState(auth)\n\n    return (\n        <HeaderContainer>\n            <HeaderLeft>\n                <HeaderAvatar \n                    src={user?.photoURL}\n                    alt={user?.displayName}\n                    onClick={() => auth.signOut()}\n                />\n                <AccessTimeIcon />\n            </HeaderLeft>\n            \n            <HeaderSearch>\n                <SearchIcon />\n                <input type='text' placeholder='Search channel'/>\n            </HeaderSearch>\n\n            <HeaderRight>\n                <HelpOutlineIcon />\n            </HeaderRight>\n        </HeaderContainer>\n    )\n}\n\nexport default Header\n\nconst HeaderContainer = styled.div`\n    display: flex;\n    position: fixed;\n    width: 100%;\n    align-items: center;\n    justify-content: space-between;\n    padding: 10px 0;\n    background-color: var(--slack-color);\n    color: white;\n`;\n\nconst HeaderLeft = styled.div`\n    flex: 0.3;\n    display: flex;\n    align-items: center;\n    margin-left: 20px;\n\n    > .MuiSvgIcon-root {\n        margin-left: auto;\n        margin-right: 30px;\n    }\n`;\n\nconst HeaderAvatar = styled(Avatar)`\n    cursor: pointer;\n\n    :hover {\n        opacity: 0.8;\n    }\n`;\n\nconst HeaderSearch = styled.div`\n    flex: 0.4;\n    opacity: 1;\n    border-radius: 6px;\n    background-color: #421f44;\n    text-align: center;\n    display: flex;\n    padding: 0 50px;\n    color: gray;\n    border: 1px gray solid;\n\n    > input {\n        background-color: transparent;\n        border: none;\n        text-align: center;\n        min-width: 30vw;\n        outline: none;\n        color: white;\n    }\n`;\n\nconst HeaderRight = styled.div`\n    flex: 0.3;\n    display: flex;\n    align-items: flex-end;\n\n    > .MuiSvgIcon-root {\n        margin-left: auto;\n        margin-right: 20px;\n    }\n\n`;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState: {\n    roomId: null,\n  },\n  reducers: {\n    enterRoom: (state, action) => {\n      state.roomId = action.payload.id;\n    },\n  }\n});\n\nexport const { enterRoom } = appSlice.actions;\n\nexport const selectRoomId = state => state.app.roomId;\n\nexport default appSlice.reducer;\n","import React from 'react'\nimport { useDispatch} from 'react-redux';\nimport { enterRoom } from '../features/appSlice'\nimport styled from 'styled-components';\nimport { db } from '../firebase';\n\nfunction SidebarOption({ Icon, title, addChannelOption, id }) {\n\n    const dispatch = useDispatch();\n\n    const addChannel = async () => {\n        const channelName = prompt('Please enter the channel name');\n\n        if (channelName) {\n            db.collection('rooms').add({\n                name: channelName,\n            }).then(function(docRef) {\n                dispatch(enterRoom({id: docRef.id}))\n            })\n        }\n    }\n\n    const selectChannel = () => {\n        if (id) {\n            dispatch(enterRoom({id: id}))\n        }\n    }\n\n    return (\n        <SidebarOptionContainer \n            onClick={ addChannelOption ? addChannel : selectChannel}\n        >\n            {Icon && <Icon fontSize='small' style={{ padding: 10 }}/>}\n            {Icon ? (\n                <h3>{title}</h3>\n            ) : (\n                <SidebarOptionChannel>\n                    <span>#</span> {title}\n                </SidebarOptionChannel>\n            )}\n        </SidebarOptionContainer>\n    )\n}\n\nexport default SidebarOption\n\nconst SidebarOptionContainer = styled.div`\n    display: flex;\n    font-size: 12px;\n    align-items: center;\n    padding-left: 2px;\n    cursor: pointer;\n\n    :hover {\n        opacity: 0.9;\n        background-color: #340e36;\n    }\n\n    > h3 {\n        font-weight: 500;\n    }\n\n    > h3 > span {\n        padding: 15px;\n    }\n`;\n\nconst SidebarOptionChannel = styled.h3`\n    padding: 5px 0;\n    font-weight: 300;\n`;","import React from 'react'\nimport styled from 'styled-components';\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\nimport CreateIcon from '@mui/icons-material/Create';\nimport SidebarOption from './SidebarOption';\nimport InsertCommentIcon from '@mui/icons-material/InsertComment';\nimport InboxIcon from '@mui/icons-material/Inbox';\nimport DraftsIcon from '@mui/icons-material/Drafts';\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\nimport PeopleAltIcon from '@mui/icons-material/PeopleAlt';\nimport AppsIcon from '@mui/icons-material/Apps';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport AddIcon from '@mui/icons-material/Add';\nimport { useCollection } from 'react-firebase-hooks/firestore';\nimport { db } from '../firebase';\n\nfunction Sidebar() {\n\n    const [channels] = useCollection(db.collection('rooms'));\n\n    return (\n        <SidebarContainer>\n            <SidebarHeader>\n                <SidebarInfo>\n                    <h2>My Organization</h2>\n                    <h3>\n                        <FiberManualRecordIcon />\n                        Gabriel Caixeta\n                    </h3>\n                </SidebarInfo>\n                <CreateIcon />\n            </SidebarHeader>\n\n            <SidebarOption Icon={InsertCommentIcon} title=\"Threads\" />\n            <SidebarOption Icon={InboxIcon} title=\"Mentions & reactions\" />\n            <SidebarOption Icon={DraftsIcon} title=\"Saved items\" />\n            <SidebarOption Icon={BookmarkBorderIcon} title=\"Channel browser\" />\n            <SidebarOption Icon={PeopleAltIcon} title=\"People & user groups\" />\n            <SidebarOption Icon={AppsIcon} title=\"Apps\" />\n            <SidebarOption Icon={FileCopyIcon} title=\"File browser\" />\n            <SidebarOption Icon={ExpandLessIcon} title=\"Show less\" />\n\n            <hr />\n            <SidebarOption Icon={ExpandMoreIcon} title=\"Channels\" />\n            <hr />\n            <SidebarOption Icon={AddIcon} addChannelOption title=\"Add Channel\" />\n\n            {/* Get live data from firestore */}\n            {channels?.docs.map(doc => (\n                <SidebarOption key={doc.id} id ={doc.id} title={doc.data().name} />\n            ))}\n\n\n        </SidebarContainer>\n    );\n}\n\nexport default Sidebar\n\n\nconst SidebarContainer = styled.div`\n    background-color: var(--slack-color);\n    color: white;\n    flex: 0.3;\n    border-bottom: 1px solid #49274b;\n    max-width: 260px;\n    margin-top: 60px;\n\n    > hr {\n        margin-top: 10px;\n        margin-bottom: 10px;\n        border: 1px solid #49274b\n    }\n`;\n\nconst SidebarHeader = styled.div`\n    display: flex;\n    border-bottom: 1px solid #49274b;\n    padding-bottom: 10px;\n    padding: 13px;\n\n    > .MuiSvgIcon-root {\n        padding: 8px;\n        color: #49274b;\n        font-size: 18px;\n        background-color: white;\n        border-radius: 999px;\n    }\n`;\n\nconst SidebarInfo = styled.div`\n    flex: 1;\n    \n    > h2 {\n        font-size: 15px;\n        font-weight: 900;\n        margin-bottom: 5px;\n    }\n\n    > h3 {\n        display: flex;\n        font-size: 13px;\n        font-weight: 400;\n        align-items: center;\n    }\n\n    > h3 > .MuiSvgIcon-root {\n        font-size: 14px;\n        margin-top: 1px;\n        margin-right: 2px;\n        color: green;\n    }\n`;","import { Button } from '@mui/material';\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { auth, db } from '../firebase'\nimport firebase from 'firebase';\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\nfunction ChatInput({ channelId, channelName, chatRef }) {\n    const [input, setInput] = useState(\"\");\n    const [user] = useAuthState(auth)\n\n    const sendMessage = e => {\n        e.preventDefault(); //Prevents refresh\n\n        if (!channelId || !input) {\n            return false;\n        }\n\n        db.collection('rooms').doc(channelId).collection('messages').add({\n            message: input,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            user: user?.displayName,\n            userImage: user?.photoURL\n        });\n\n        chatRef.current.scrollIntoView({behavior: \"smooth\"});\n        setInput(\"\");\n    }\n\n    return (\n        <ChatInputContainer>\n            <form action=\"\">\n                <input value={input} onChange={e => setInput(e.target.value)} placeholder={`Message #${channelName}`}/>\n                <Button hidden type='submit' onClick={ sendMessage }>\n                    SEND\n                </Button>\n            </form>\n        </ChatInputContainer>\n    )\n}\n\nexport default ChatInput\n\nconst ChatInputContainer = styled.div`\n    border-radius: 20px;\n\n    > form {\n        position: relative;\n        display: flex;\n        justify-content: center;\n    }\n\n    > form > input {\n        position: fixed;\n        bottom: 30px;\n        width: 60%;\n        border: 1px solid gray;\n        border-radius: 3px;\n        padding: 20px;\n        outline: none;\n    }\n\n    > form > button {\n        display: none !important;\n    }\n`;","import React from 'react'\nimport styled from 'styled-components'\n\nfunction Message({ message, timestamp, user, userImage }) {\n    return (\n        <MessageContainer>\n            <img src={userImage} alt=\"\" />\n            <MessageInfo>\n                <h4>\n                    {user}{' '}\n                    <span>{new Date(timestamp?.toDate()).toUTCString()}</span>\n                </h4>\n                <p>{message}</p>\n            </MessageInfo>\n            \n        </MessageContainer>\n    )\n}\n\nexport default Message\n\nconst MessageContainer = styled.div`\n    display: flex;\n    align-items: center;\n    padding: 20px;\n\n    > img {\n        height: 50px;\n        border-radius: 8px;\n    }\n`;\n\nconst MessageInfo = styled.div`\n    padding-left: 10px;\n\n    > h4 > span {\n        color: gray;\n        font-weight: 300;\n        margin-left: 4px;\n        font-size: 10px;\n    }\n`;","import React, { useEffect, useRef } from 'react'\nimport styled from 'styled-components';\nimport StarBorderOutlinedIcon from '@mui/icons-material/StarBorderOutlined';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport { useSelector } from 'react-redux';\nimport { selectRoomId } from '../features/appSlice';\nimport ChatInput from './ChatInput';\nimport { useCollection, useDocument } from 'react-firebase-hooks/firestore';\nimport { db } from '../firebase';\nimport Message from './Message';\n\nfunction Chat() {\n    const chatRef = useRef(null);\n    const roomId = useSelector(selectRoomId);\n    const [roomDetails] = useDocument(\n        roomId && db.collection('rooms').doc(roomId)\n    );\n    const [roomMessages, loading] = useCollection(\n        roomId && db.collection('rooms').doc(roomId).collection('messages').orderBy(\"timestamp\", \"asc\")\n    );\n\n    useEffect(() => {\n        chatRef?.current?.scrollIntoView({\n            behavior: \"smooth\",\n        });\n    }, [roomId, loading])\n\n    return (\n        <ChatContainer>\n            {roomDetails && roomMessages && (\n                <>\n                    <Header>\n                        <HeaderLeft>\n                            <h4>\n                                <strong>#{roomDetails?.data().name}</strong>\n                            </h4>\n                            <StarBorderOutlinedIcon />\n    \n                        </HeaderLeft>\n                        <HeaderRight>\n                            <p>\n                                <InfoOutlinedIcon /> Details\n                            </p>\n                        </HeaderRight>\n                    </Header>\n    \n                    <ChatMessages>\n                        {roomMessages?.docs.map(doc => {\n                            const {message, timestamp, user, userImage } = doc.data();\n    \n                            return (\n                                <Message \n                                    key={doc.id}\n                                    message={message}\n                                    timestamp={timestamp}\n                                    user={user}\n                                    userImage={userImage}\n                                />\n                            )\n                        })}\n                        <ChatBottom ref={ chatRef }/>\n                    </ChatMessages>\n    \n                    <ChatInput\n                        chatRef = { chatRef }\n                        channelName = { roomDetails?.data().name }\n                        channelId = { roomId }\n                    />\n                </>            \n            )}\n        </ChatContainer>\n    )\n}\n\nexport default Chat\n\nconst ChatContainer = styled.div`\n    flex: 0.7;\n    flex-grow: 1;\n    overflow-y: scroll;\n    margin-top: 60px;\n`;\n\nconst Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 20px;\n    border-bottom: 1px solid lightgray;\n`;\n\nconst HeaderLeft = styled.div`\n    display: flex;\n    align-items: center;\n\n    > h4 {\n        display: flex;\n        text-transform: lowercase;\n        margin-right: 10px;\n    }\n\n    > h4 > .MuiSvgIcon-root {\n        margin-left: 20px;\n        font-size: 18px;\n    }\n`;\n\nconst HeaderRight = styled.div`\n    > p {\n        display: flex;\n        align-items: center;\n        font-size: 14px;\n    }\n\n    > p > .MuiSvgIcon-root {\n        margin-right: 5px !important;\n        font-size: 16px;\n    }\n`;\n\nconst ChatMessages = styled.div`\n\n`;\n\n\nconst ChatBottom = styled.div`\n    padding-bottom: 200px;\n`;","import { Button } from '@mui/material';\nimport React from 'react'\nimport styled from 'styled-components'\nimport { auth, provider } from '../firebase';\n\nfunction Login() {\n\n    const signIn = e => {\n        e.preventDefault();\n        auth.signInWithPopup(provider).catch(error => alert(error.message))\n    }\n\n    const signInDefault = e => {\n        e.preventDefault();\n    }\n\n    return (\n        <LoginContainer>\n            <LoginInnerContainer>\n                <img src=\"https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg\" alt=\"\"/>\n                <h1>Sign in to Slack Clone</h1>\n                <p>clone.slack.gabrielcaixeta.com</p>\n\n                <Button onClick={signIn}>\n                    Sign in with Google\n                </Button>\n                {/* <Button onClick={signInDefault}>\n                    Sign in with a test account\n                </Button> */}\n\n            </LoginInnerContainer>\n        </LoginContainer>\n    )\n}\n\nexport default Login\n\nconst LoginContainer = styled.div`\n    background-color: #f8f8f8;\n    height: 100vh;\n    display: grid;\n    place-items: center;\n`;\n\nconst LoginInnerContainer = styled.div`\n    padding: 100px;\n    text-align: center;\n    background-color: white;\n    border-radius: 10px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n\n    > img {\n        object-fit: contain;\n        height: 100px;\n        margin-bottom: 40px;\n    }\n\n    > button {\n        margin-top: 50px;\n        text-transform: inherit !important;\n        background-color: #0a8d48 !important;\n        color: white;\n    }\n`;","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport styled from 'styled-components';\nimport Chat from './components/Chat';\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { auth } from './firebase';\nimport Login from './components/Login';\n\nfunction App() {\n  const [user, loading] = useAuthState(auth);\n\n  return (\n    <div className=\"app\">\n      <Router>\n        {!user ? (\n          <Login />\n        ): (\n          <>\n            <Header />\n            <AppBody>\n              <Sidebar />\n              <Switch>\n                <Route path=\"/\">\n                  <Chat />\n                </Route>\n              </Switch>\n            </AppBody>\n          </>\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\nconst AppBody = styled.div`\n  display: flex;\n  height: 100vh;\n`;","import { configureStore } from '@reduxjs/toolkit';\nimport appReducer from '../features/appSlice';\n\nexport const store = configureStore({\n  reducer: {\n    app: appReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}